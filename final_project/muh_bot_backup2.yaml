apiVersion: apps/v1
kind: Deployment
metadata:
  name: polybot-deployment
  namespace: mjoulani
spec:
  replicas: 1
  selector:
    matchLabels:
      app: polybot
  template:
    metadata:
      labels:
        app: polybot
    spec:
      serviceAccountName: polybot-service-account
      imagePullSecrets:
      - name: regcred
      containers:
      - name: polybot
        image: mjoulani/polybot-image:latest
        ports:
        - containerPort: 8080
        env:
        - name: S3_BUCKET_NAME
          value: "mjoulani-bucket"
        - name: SQS_QUEUE_NAME
          value: "muh_sqs"
        - name: AWS_REGION
          value: "us-east-1"
        - name: WEBHOOK_URL
          value: "https://try.atech-bot.click/"
---
apiVersion: v1
kind: Service
metadata:
  name: polybot-service
  namespace: mjoulani
spec:
  selector:
    app: polybot
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yolo5-deployment
  namespace: mjoulani
spec:
  replicas: 2
  selector:
    matchLabels:
      app: yolo5
  template:
    metadata:
      labels:
        app: yolo5
    spec:
      serviceAccountName: yolo5-service-account
      imagePullSecrets:
      - name: regcred
      containers:
      - name: yolo5
        image: mjoulani/yolo5-image:latest
        ports:
        - containerPort: 5000
        env:
        - name: S3_BUCKET_NAME
          value: "mjoulani-bucket"
        - name: SQS_QUEUE_NAME
          value: "muh_sqs"
        - name: AWS_REGION
          value: "us-east-1"
        - name: POLYBOT_SERVICE_HOST
          value: "polybot-service.mjoulani.svc.cluster.local"
        - name: POLYBOT_SERVICE_PORT
          value: "8080"
---
apiVersion: v1
kind: Service
metadata:
  name: yolo5-service
  namespace: mjoulani
spec:
  selector:
    app: yolo5
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: yolo5-autoscaler
  namespace: mjoulani
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: yolo5-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: try-site-ingress
  namespace: mjoulani
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: try.atech-bot.click
    http:
      paths:
      - path: /   #polybot
        pathType: Prefix
        backend:
          service:
            name: polybot-service
            port:
              number: 8080
      - path: /   #yolo5
        pathType: Prefix
        backend:
          service:
            name: yolo5-service
            port:
              number: 5000
  tls:
  - hosts:
    - try.atech-bot.click
    secretName: mjoulani-tls


