/Users/daniel/Documents/DevOps/docker/mongo/mongo1:/data/db
docker network create mongoCluster


docker run -d --rm -p 27017:27017 --name mongo1 --network mongoCluster -v /Users/daniel/Documents/DevOps/docker/mongo/mongo1:/data/db mongo:5 mongod --replSet myReplicaSet --bind_ip localhost,mongo1

docker run -d --rm -p 27018:27017 --name mongo2 --network mongoCluster -v /Users/daniel/Documents/DevOps/docker/mongo/mongo2:/data/db mongo:5 mongod --replSet myReplicaSet --bind_ip localhost,mongo2

docker run -d --rm -p 27019:27017 --name mongo3 --network mongoCluster -v /Users/daniel/Documents/DevOps/docker/mongo/mongo3:/data/db mongo:5 mongod --replSet myReplicaSet --bind_ip localhost,mongo3


docker exec -it mongo1 mongosh --eval "rs.initiate({
 _id: \"myReplicaSet\",
 members: [
   {_id: 0, host: \"mongo1\"},
   {_id: 1, host: \"mongo2\"},
   {_id: 2, host: \"mongo3\"}
 ]
})"


#Generate ssl certificate

openssl req -newkey rsa:2048 -sha256 -nodes -keyout private.pem -x509 -days 365 -out YOURPUBLIC.pem -subj "/C=US/ST=New York/L=Brooklyn/O=Example Brooklyn Company/CN=Daniel-LB-1354148717.eu-west-1.elb.amazonaws.com"


req
sudo apt install python3-pip


#helpfull commands

docker build -t daniel-yolo-aws .

docker run -d --name daniel-yolo-aws daniel-yolo-aws


#security group
443
22
