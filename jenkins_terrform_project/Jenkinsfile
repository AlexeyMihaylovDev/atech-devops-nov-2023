pipeline {
    agent any

    environment {
        TF_VAR_zone = "${params.zonechoice}"
    }

    parameters {
        choice choices:['us-west-1', 'eu-west-1', 'eu-west-2', 'sa-east-1'], description: 'Choice Zone', name: 'zonechoice'
        booleanParam(name:'Init_TERRAFORM', defaultValue: false, description: 'Check to init Terraform changes')
        booleanParam(name: 'PLAN_TERRAFORM', defaultValue: false, description: 'Check to plan Terraform changes')
        booleanParam(name: 'APPLY_TERRAFORM', defaultValue: false, description: 'Check to apply Terraform changes')
        booleanParam(name: 'DESTROY_TERRAFORM', defaultValue: false, description: 'Check to apply Terraform changes')
    }

    stages {
        stage('Clone Repository') {
            steps {
                deleteDir()
                // Clone repository
            }
        }

        stage('Terraform Init') {
            when {
                expression { params.Init_TERRAFORM }
            }
            steps {
                script{
                    echo "=================Terraform Init=================="
                    echo "Choice : ${params.zonechoice}"
                    sh 'env | grep TF_VAR_zone'
                    // Additional steps for Terraform init
                }
                
            }
        }

        stage('Terraform Plan') {
            when {
                expression { params.PLAN_TERRAFORM }
            }
            steps {
                script{
                    echo "=================Terraform Plan=================="
                    sh 'env | grep TF_VAR_zone'
                    // Additional steps for Terraform plan
                }
                
            }
        }

        stage('Terraform Apply') {
            when {
                expression { params.APPLY_TERRAFORM }
            }
            steps {
                script{
                    echo "=================Terraform Apply=================="
                    sh 'env | grep TF_VAR_zone'
                    // Additional steps for Terraform apply
                }
        
            }
        }

        stage('Terraform Destroy') {
            when {
                expression { params.DESTROY_TERRAFORM }
            }
            steps {
                script{
                    echo "=================Terraform Destroy=================="
                    sh 'env | grep TF_VAR_zone'
                    // Additional steps for Terraform destroy
                }
    
            }
        }
    }
}

